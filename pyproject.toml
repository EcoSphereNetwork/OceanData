[tool.poetry]
name = "ecosphere-project"
version = "0.1.0"
description = "EcoSphere Network Project Template"
authors = ["EcoSphere Network <openhands@all-hands.dev>"]
license = "MIT"
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^2.5.3"
python-dotenv = "^1.0.0"
typer = "^0.9.0"
rich = "^13.7.0"
httpx = "^0.26.0"
sqlalchemy = "^2.0.25"
alembic = "^1.13.1"
pyyaml = "^6.0.1"
gitpython = "^3.1.41"
requests = "^2.32.3"
toml = "^0.10.2"
pandas = "^2.3.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.3"
black = "^24.1.1"
ruff = "^0.1.14"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
mkdocs = "^1.5.3"
mkdocs-material = "^9.5.3"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}
types-pyyaml = "^6.0.12.12"
faker = "^22.5.1"
hypothesis = "^6.92.1"

[tool.poetry.scripts]
app = "src.main:cli_main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=term-missing --cov-report=xml"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]

[tool.black]
line-length = 100
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = "src/oceandata|ocean_sdk|scripts|tests"

[tool.ruff]
line-length = 100
target-version = "py39"
extend-exclude = ["src/oceandata", "ocean_sdk", "scripts", "tests"]

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B"]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
exclude = "src/oceandata|ocean_sdk|scripts|tests"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = falsedisallow_incomplete_defs = false